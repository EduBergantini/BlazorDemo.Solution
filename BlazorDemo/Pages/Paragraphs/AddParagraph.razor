@page "/articles/{ArticleID}/paragraphs"

@using Microsoft.Extensions.DependencyInjection

@inject NavigationManager NavigationManager

@inherits OwningComponentBase

<h1>Criar Paragrafo</h1>

<EditForm Model="paragraph" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Content">Conteúdo</label>
        <InputTextArea id="Content" @bind-Value="paragraph.Content" class="form-control" placeholder="Digite o conteúdo do paragrafo..." aria-describedby="ContentHelp" />
        <small id="ContentHelp" class="form-text text-muted">Inclua aqui o texto do seu paragrafo.</small>
    </div>

    <div class="form-group">
        <label for="ImageUrl">Imagem</label>
        <InputText id="ImageUrl" @bind-Value="paragraph.ImageUrl" class="form-control" placeholder="Selecione uma imagem" aria-describedby="descHelp" />
        <small id="descHelp" class="form-text text-muted">Inclua uma imagem caso deseje.</small>
    </div>

    <button type="submit" class="btn btn-primary">Criar</button>
</EditForm>

@code {

    [Parameter]
    public string ArticleID { get; set; }

    public Paragraph paragraph { get; set; }

    protected override async Task OnInitializedAsync()
    {
        int articleId;
        if (int.TryParse(ArticleID, out articleId))
        {
            var articleRepository = ScopedServices.GetRequiredService<ArticleRepository>();
            var articles = await articleRepository.GetArticlesAsync(x => x.Id == Convert.ToInt32(ArticleID));
            if (articles.Length == 0)
            {
                NavigationManager.NavigateTo("articles/index", false);
            }
        }
        paragraph = new Paragraph();
    }

    public async Task HandleValidSubmit()
    {
        var paragraphRepository = ScopedServices.GetRequiredService<ParagraphRepository>();
        paragraph.ArticleId = Convert.ToInt32(ArticleID);
        await paragraphRepository.AddParagraph(paragraph);
        NavigationManager.NavigateTo($"articles/edit/{ArticleID}", false);
    }
}
